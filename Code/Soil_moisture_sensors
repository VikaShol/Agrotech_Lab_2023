// Your C++ code here

#include <Arduino.h>
#include <Wire.h>
#include "Adafruit_SHT31.h"
#include <WiFi.h>
#include "ThingSpeak.h"
#include <U8g2lib.h>

U8G2_SSD1306_128X64_NONAME_1_HW_I2C u8g2(U8G2_R0, /* reset=*/U8X8_PIN_NONE);

unsigned long myChannelNumber = 123456;
const char *myWriteAPIKey = "YOUR_API_KEY";

const int dry1 = 2975;
const int wet1 = 174;

const int dry2 = 2975;//2959
const int wet2 = 561;//-955

const float Swet = 49.15;
const float Sdry = 0.0;

const int soilMoisturePin = A0;
const int CapacitiveSoilSensor1 = A2;
const int CapacitiveSoilSensor2 = A3;
const int relayPin1 = D2;
const int relayPin2 = D3;
const int relayPin3 = D6;

const char *ssid = "YOUR_SSID";
const char *password = "YOUR_PASSWORD";
const char *server = "api.thingspeak.com";
WiFiClient client;

Adafruit_SHT31 sht31 = Adafruit_SHT31();

unsigned long previousMeasurementTime = 0;
const unsigned long measurementInterval = 10000;

void setup() {
  Serial.begin(115200);

  pinMode(relayPin1, OUTPUT);
  pinMode(relayPin2, OUTPUT);                                         
  pinMode(relayPin3, OUTPUT); 

  pinMode(CapacitiveSoilSensor1, INPUT);
  pinMode(CapacitiveSoilSensor2, INPUT);
  pinMode(soilMoisturePin, INPUT);
  
  WiFi.disconnect(true);
  delay(10);
  WiFi.begin(ssid, password);
  Serial.println();
  Serial.print("Connecting to ");
  Serial.println(ssid);
  ThingSpeak.begin(client);

  while (WiFi.status() != WL_CONNECTED) {
    delay(500);
    Serial.print(".");
  }
  Serial.println();
  Serial.print("NodeMcu connected to WiFi: ");
  Serial.println(ssid);
  Serial.println();

  if (!sht31.begin(0x44)) {
    Serial.println("Couldn't find SHT31");
    while (1) delay(1);
  }

  u8g2.begin();// Initialize u8g2 display
}

void loop() {
  unsigned long currentMillis = millis();

  if (currentMillis - previousMeasurementTime >= measurementInterval) {
    previousMeasurementTime = currentMillis;

    int sensorVal1 = analogRead(CapacitiveSoilSensor1);
    int sensorVal2 = analogRead(CapacitiveSoilSensor2);

    int percentageHumidity1 = map(sensorVal1, wet1, dry1, 100, 0);
    int percentageHumidity2 = map(sensorVal2, wet2, dry2, 100, 0);


    int soilMoistureValue = analogRead(soilMoisturePin);
    //int soilTempValue = analogRead(soilTempPin);
    float t = sht31.readTemperature();
    float h = sht31.readHumidity();
    // Calculate soil moisture and temperature values
    float soilMoisture = (soilMoistureValue / 1000.0) * 25.0;
    //float soilTemp = (soilTempValue / 1000.0) * 60.0 - 32.0;
    float soilMoisture0 = map(soilMoisture, Swet, Sdry, 100.0, 0.0);

    ThingSpeak.setField(1, h);
    ThingSpeak.setField(2, t);
    ThingSpeak.setField(3, soilMoisture0);
    ThingSpeak.setField(4, percentageHumidity1);
    ThingSpeak.setField(5, percentageHumidity2);
    ThingSpeak.writeFields(myChannelNumber, myWriteAPIKey);

    Serial.println("Uploaded to ThingSpeak server....");
    Serial.println("Waiting to upload next reading...");

    u8g2.firstPage();
    do {
      u8g2.setFont(u8g2_font_ncenB08_tr);
      if (soilMoisture0 < 45) {
        digitalWrite(relayPin1, HIGH);
        u8g2.drawStr(10, 10, " SM0: ");
        u8g2.setCursor(50, 10);
        u8g2.print(soilMoisture0);
        u8g2.print("%");
        Serial.print("soilMoisture0: ");
        Serial.print(soilMoisture0);
        Serial.println("%");
      } else {
        digitalWrite(relayPin1, LOW);
        u8g2.drawStr(10, 10, "SM0 ");
        u8g2.setCursor(50, 10);
        u8g2.print(soilMoisture0);
        u8g2.print("%");
        Serial.print("soilMoisture0: ");
        Serial.print(soilMoisture0);
        Serial.println("%");
      }
      if (percentageHumidity1 < 45) {
        digitalWrite(relayPin2, HIGH);
        Serial.print("sensorVal1: ");
        Serial.print(sensorVal1);
        Serial.println("");
        Serial.print(percentageHumidity1);
        Serial.println("%");
        u8g2.drawStr(10, 20, " SM1: ");
        u8g2.setCursor(50, 20);
        u8g2.print(percentageHumidity1);
        u8g2.print("%");
      } else {
        digitalWrite(relayPin2, LOW);
        Serial.print("sensorVal1: ");
        Serial.print(sensorVal1);
        Serial.println("");
        Serial.print(percentageHumidity1);
        Serial.println("%");
        u8g2.drawStr(10, 20, " SM1: ");
        u8g2.setCursor(50, 20);
        u8g2.print(percentageHumidity1);
        u8g2.print("%");
      }
      if (percentageHumidity2 < 45) {
        digitalWrite(relayPin3, HIGH);
        Serial.print("sensorVal2: ");
        Serial.print(sensorVal2);
        Serial.println("");
        Serial.print(percentageHumidity2);
        Serial.println("%");
        u8g2.drawStr(10, 30, " SM2: ");
        u8g2.setCursor(50, 30);
        u8g2.print(percentageHumidity2);
        u8g2.print("%");
      } else {
        digitalWrite(relayPin3, LOW);
        Serial.print("sensorVal2: ");
        Serial.print(sensorVal2);
        Serial.println("");
        Serial.print(percentageHumidity2);
        Serial.println("%");
        u8g2.drawStr(10, 30, " SM2: ");
        u8g2.setCursor(50, 30);
        u8g2.print(percentageHumidity2);
        u8g2.print("%");
      }

      u8g2.drawStr(10, 50, " Temp: ");
      u8g2.setCursor(50, 50);
      u8g2.print(t);
      u8g2.print(" C");

      u8g2.drawStr(10, 60, " RH: ");
      u8g2.setCursor(50, 60);
      u8g2.print(h);
      u8g2.print("%");

      Serial.print("Temp: ");
      Serial.println(t);
      Serial.print("RH: ");
      Serial.println(h);
    } while (u8g2.nextPage());
  }
}
